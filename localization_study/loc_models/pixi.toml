[project]
name = "object-detection-underwater"
version = "0.1.0"
description = "Object detection underwater"
authors = ["Melanie Wille", "Scarlett Raine <sg.raine@qut.edu.au>", "Tobias Fischer <tobias.fischer@qut.edu.au>"]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-arm64"]
preview = ["pixi-build"] 

[system-requirements]
linux = "4.12"
libc = { family = "glibc", version = "2.22" }

[feature.cuda]
platforms = ["linux-64"]
system-requirements = {cuda = "12"}

[dependencies]
python = "3.12.*"
pip = "*"
numpy = "<2"
pytorch = ">=2.4"
torchvision = "*"
tqdm = "*"
matplotlib = "*"
scipy = "*"
Pillow = ">=7.1"
git = "*"
natsort = "*"
compilers = "*"
cmake = "*"
xformers = "*"
pytorch-lightning = "*"
pytorch-metric-learning = "*"
timm = "*"
h5py = "*"
scikit-learn = "*"
cython = "*"
opencv = "*"
jupyterlab = "*"
wandb = "*"
ultralytics = "*"

[feature.cuda.dependencies]
cuda-version = "12.*"
pytorch-gpu = "*"
cuda-cudart-dev = "*"
cuda-crt = "*"
cudnn = "*"
libcusparse-dev = "*"
cuda-driver-dev = "*"
cuda-nvcc = "*"
cuda-nvrtc-dev = "*"
cuda-nvtx-dev = "*"
cuda-nvml-dev = "*"
cuda-profiler-api = "*"
cusparselt = "*"
libcublas-dev = "*"
libcudss-dev = "*"
libcufile-dev = "*"
libcufft-dev = "*"
libcurand-dev = "*"
libcusolver-dev = "*"

[pypi-dependencies]
yolo11_object_detection = { path = ".", editable = true }

[environments]
cuda = ["cuda"]

[tasks]
run-all = {cmd = "exit 0", depends-on = ["run-all-training", "run-all-tests"] } 
run-all-training = {cmd = "exit 0", depends-on = ["run-yolo-train-1", "run-yolo-train-2", "run-yolo-train-3"] }
run-all-tests = {cmd = "exit 0", depends-on = ["run-yolo-test-1", "run-yolo-test-2", "run-yolo-test-3"] }
run-single-class-DUO = {cmd = "exit 0", depends-on = ["run-yolo-train-1", "run-yolo-test-1"] }
run-balanced = {cmd = "exit 0", depends-on = ["run-yolo-train-2", "run-yolo-test-2"] }
run-reduced = {cmd = "exit 0", depends-on = ["run-yolo-train-3", "run-yolo-test-3"] }
run-yolo-train-1 = { cmd = "python scripts/YOLO11_DUO_train.py" }  
run-yolo-train-2 = { cmd = "python scripts/YOLO11_balanced_train.py" } 
run-yolo-train-3 = { cmd = "python scripts/YOLO11_reduced_train.py" }           
run-yolo-test-1 = { cmd = "python scripts/YOLO11_DUO_test.py" }  
run-yolo-test-2 = { cmd = "python scripts/YOLO11_balanced_test.py" }  
run-yolo-test-3 = { cmd = "python scripts/YOLO11_reduced_test.py" }               
fix-mps = { cmd = "sed -i '' 's/    return torch.ops.torchvision.nms(boxes, scores, iou_threshold)/    if boxes.device.type == \"mps\":\\n        boxes = boxes.cpu()\\n        scores = scores.cpu()\\n    return torch.ops.torchvision.nms(boxes, scores, iou_threshold)/' ./.pixi/envs/default/lib/python3.12/site-packages/torchvision/ops/boxes.py" }
